"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _createForOfIteratorHelper(e,t){var n,r,o,i,u="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(u)return r=!(n=!0),{s:function(){u=u.call(e)},n:function(){var e=u.next();return n=e.done,e},e:function(e){r=!0,o=e},f:function(){try{n||null==u.return||u.return()}finally{if(r)throw o}}};if(Array.isArray(e)||(u=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return u&&(e=u),i=0,{s:t=function(){},n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _defineProperty(e,t,n){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,_toPropertyKey(r.key),r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0===n)return("string"===t?String:Number)(e);n=n.call(e,t||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _createSuper(n){var r=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(n);return _possibleConstructorReturn(this,r?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _wrapNativeSuper(e){var n="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(e){if(null===e||!_isNativeFunction(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(e))return n.get(e);n.set(e,t)}function t(){return _construct(e,arguments,_getPrototypeOf(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(t,e)})(e)}function _construct(e,t,n){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);t=new(Function.bind.apply(e,r));return n&&_setPrototypeOf(t,n.prototype),t}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _isNativeFunction(t){try{return-1!==Function.toString.call(t).indexOf("[native code]")}catch(e){return"function"==typeof t}}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}!function r(o,i,u){function s(t,e){if(!i[t]){if(!o[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(c)return c(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}n=i[t]={exports:{}},o[t][0].call(n.exports,function(e){return s(o[t][1][e]||e)},n,n.exports,r,o,i,u)}return i[t].exports}for(var c="function"==typeof require&&require,e=0;e<u.length;e++)s(u[e]);return s}({1:[function(e,t,n){var r=function(){_inherits(t,_wrapNativeSuper(HTMLElement));var e=_createSuper(t);function t(){return _classCallCheck(this,t),e.call(this)}return _createClass(t,[{key:"connectedCallback",value:function(){var e=this;this.menu=this.querySelector(".js-header__menu"),this.openBtn=this.querySelector(".js-header__menu-button--open"),this.closeBtn=this.querySelector(".js-header__menu-button--close"),this.menuStatus="closed",this.openBtn.addEventListener("click",function(){return e.toggleMenu()}),this.closeBtn.addEventListener("click",function(){return e.toggleMenu()})}},{key:"disconnectedCallback",value:function(){this.openBtn.removeEventListener("click",this.toggleMenu),this.closeBtn.removeEventListener("click",this.toggleMenu)}},{key:"toggleMenu",value:function(){"closed"==this.menuStatus?this.menuOpen():this.menuClose()}},{key:"menuOpen",value:function(){this.menu.style.left="0",this.menuStatus="open",console.log("menu open")}},{key:"menuClose",value:function(){this.menu.style.left="-100%",this.menuStatus="closed",console.log("menu closed")}}]),t}(),o=function(){_inherits(t,_wrapNativeSuper(HTMLElement));var e=_createSuper(t);function t(){return _classCallCheck(this,t),e.call(this)}return _createClass(t,[{key:"connectedCallback",value:function(){var e=this;this.menu=this.querySelector(".js-menu-desktop"),this.menuBackground=this.querySelector(".js-menu-desktop--bgd"),this.openBtn=this.querySelector(".js-menu-desktop--open"),this.closeBtn=this.querySelector(".js-menu-desktop--close"),this.menuStatus="closed",this.openBtn.addEventListener("click",function(){return e.toggleMenu()}),this.closeBtn.addEventListener("click",function(){return e.toggleMenu()}),this.menuBackground.addEventListener("click",function(){return e.menuClose()})}},{key:"disconnectedCallback",value:function(){this.openBtn.removeEventListener("click",this.toggleMenu),this.closeBtn.removeEventListener("click",this.toggleMenu)}},{key:"toggleMenu",value:function(){"closed"==this.menuStatus?this.menuOpen():this.menuClose()}},{key:"menuOpen",value:function(){this.menu.style.left="0",this.menuBackground.style.display="block",this.menuBackground.style.opacity="26%",this.menuStatus="open"}},{key:"menuClose",value:function(){this.menu.style.left="-100%",this.menuStatus="closed",this.menuBackground.style.display="none",this.menuBackground.style.opacity="0"}}]),t}(),i=function(){_inherits(t,_wrapNativeSuper(HTMLElement));var e=_createSuper(t);function t(){return _classCallCheck(this,t),e.call(this)}return _createClass(t,[{key:"connectedCallback",value:function(){var e=this;this.menu=this.querySelector(".js-header__menu"),this.expandedMenu=this.querySelector(".js-expanded-menu"),this.backBtn=this.querySelector(".js-expanded-menu__btn--back"),this.closeBtn=this.querySelector(".js-expanded-menu__btn--close"),this.openBtn=this.querySelector(".js-expanded-menu__btn--open"),this.expandedMenuStatus="closed",this.backBtn.addEventListener("click",function(){return e.toggleMenu()}),this.closeBtn.addEventListener("click",function(){return e.toggleMenu()}),this.openBtn.addEventListener("click",function(){return e.toggleMenu()})}},{key:"disconnectedCallback",value:function(){var e=this;this.backBtn.removeEventListener("click",this.toggleMenu),this.closeBtn.removeEventListener("click",this.toggleMenu),this.openBtn.removeEventListener("click",function(){return e.toggleMenu()})}},{key:"toggleMenu",value:function(){"closed"==this.expandedMenuStatus?this.menuOpen():this.menuClose()}},{key:"menuOpen",value:function(){this.expandedMenu.style.left="0",this.expandedMenuStatus="open"}},{key:"menuClose",value:function(){this.expandedMenu.style.left="-100%",this.expandedMenu.style.boxShadow="none",this.expandedMenuStatus="closed"}}]),t}(),u=function(){_inherits(n,_wrapNativeSuper(HTMLElement));var t=_createSuper(n);function n(){var e;return _classCallCheck(this,n),_defineProperty(_assertThisInitialized(e=t.call(this)),"activeMenu",null),e}return _createClass(n,[{key:"connectedCallback",value:function(){var e,t=this,n=(this.menuBackground=this.querySelector(".js-menu-desktop--bgd"),this.openBtns=this.querySelectorAll(".js-menu-desktop-expanded--open"),this.closeBtn=this.querySelector(".js-menu-desktop--close"),_createForOfIteratorHelper(this.openBtns));try{for(n.s();!(e=n.n()).done;)e.value.addEventListener("click",function(e){return t.toggleMenu(e)})}catch(e){n.e(e)}finally{n.f()}this.menuBackground.addEventListener("click",function(){return t.menuClose()}),this.closeBtn.addEventListener("click",function(){return t.menuClose()})}},{key:"disconnectedCallback",value:function(){var e,t=this,n=_createForOfIteratorHelper(this.openBtns);try{for(n.s();!(e=n.n()).done;)e.value.removeEventListener("click",function(){return t.toggleMenu()})}catch(e){n.e(e)}finally{n.f()}}},{key:"toggleMenu",value:function(e){null!==this.activeMenu&&this.activeMenu.nextElementSibling.classList.remove("menu-desktop-expanded--active"),this.activeMenu=e.currentTarget,this.activeMenu.nextElementSibling.classList.add("menu-desktop-expanded--active")}},{key:"menuClose",value:function(){this.activeMenu.nextElementSibling.classList.remove("menu-desktop-expanded--active")}}]),n}();customElements.define("menu-navigation-mobile",r),customElements.define("menu-navigation",o),customElements.define("expanded-menu-mobile",i),customElements.define("expanded-menu",u)},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
